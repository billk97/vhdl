// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "05/05/2018 23:30:52"

// 
// Device: Altera EP2C5F256C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ergasia2 (
	A,
	B,
	Ainvert,
	Binvert,
	CarryIn,
	Operation,
	CarryOut,
	apotel);
input 	A;
input 	B;
input 	Ainvert;
input 	Binvert;
input 	CarryIn;
input 	[1:0] Operation;
output 	CarryOut;
output 	apotel;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Ainvert~combout ;
wire \A~combout ;
wire \CarryIn~combout ;
wire \B~combout ;
wire \Binvert~combout ;
wire \stage3|MuxA~0_combout ;
wire \stage4|CarryOut~0_combout ;
wire \stage8|Mux0~0_combout ;
wire \stage8|Mux0~1_combout ;
wire [1:0] \Operation~combout ;


cycloneii_io \Ainvert~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Ainvert~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Ainvert));
// synopsys translate_off
defparam \Ainvert~I .input_async_reset = "none";
defparam \Ainvert~I .input_power_up = "low";
defparam \Ainvert~I .input_register_mode = "none";
defparam \Ainvert~I .input_sync_reset = "none";
defparam \Ainvert~I .oe_async_reset = "none";
defparam \Ainvert~I .oe_power_up = "low";
defparam \Ainvert~I .oe_register_mode = "none";
defparam \Ainvert~I .oe_sync_reset = "none";
defparam \Ainvert~I .operation_mode = "input";
defparam \Ainvert~I .output_async_reset = "none";
defparam \Ainvert~I .output_power_up = "low";
defparam \Ainvert~I .output_register_mode = "none";
defparam \Ainvert~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \A~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\A~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(A));
// synopsys translate_off
defparam \A~I .input_async_reset = "none";
defparam \A~I .input_power_up = "low";
defparam \A~I .input_register_mode = "none";
defparam \A~I .input_sync_reset = "none";
defparam \A~I .oe_async_reset = "none";
defparam \A~I .oe_power_up = "low";
defparam \A~I .oe_register_mode = "none";
defparam \A~I .oe_sync_reset = "none";
defparam \A~I .operation_mode = "input";
defparam \A~I .output_async_reset = "none";
defparam \A~I .output_power_up = "low";
defparam \A~I .output_register_mode = "none";
defparam \A~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \CarryIn~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\CarryIn~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(CarryIn));
// synopsys translate_off
defparam \CarryIn~I .input_async_reset = "none";
defparam \CarryIn~I .input_power_up = "low";
defparam \CarryIn~I .input_register_mode = "none";
defparam \CarryIn~I .input_sync_reset = "none";
defparam \CarryIn~I .oe_async_reset = "none";
defparam \CarryIn~I .oe_power_up = "low";
defparam \CarryIn~I .oe_register_mode = "none";
defparam \CarryIn~I .oe_sync_reset = "none";
defparam \CarryIn~I .operation_mode = "input";
defparam \CarryIn~I .output_async_reset = "none";
defparam \CarryIn~I .output_power_up = "low";
defparam \CarryIn~I .output_register_mode = "none";
defparam \CarryIn~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \B~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\B~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(B));
// synopsys translate_off
defparam \B~I .input_async_reset = "none";
defparam \B~I .input_power_up = "low";
defparam \B~I .input_register_mode = "none";
defparam \B~I .input_sync_reset = "none";
defparam \B~I .oe_async_reset = "none";
defparam \B~I .oe_power_up = "low";
defparam \B~I .oe_register_mode = "none";
defparam \B~I .oe_sync_reset = "none";
defparam \B~I .operation_mode = "input";
defparam \B~I .output_async_reset = "none";
defparam \B~I .output_power_up = "low";
defparam \B~I .output_register_mode = "none";
defparam \B~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Binvert~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Binvert~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Binvert));
// synopsys translate_off
defparam \Binvert~I .input_async_reset = "none";
defparam \Binvert~I .input_power_up = "low";
defparam \Binvert~I .input_register_mode = "none";
defparam \Binvert~I .input_sync_reset = "none";
defparam \Binvert~I .oe_async_reset = "none";
defparam \Binvert~I .oe_power_up = "low";
defparam \Binvert~I .oe_register_mode = "none";
defparam \Binvert~I .oe_sync_reset = "none";
defparam \Binvert~I .operation_mode = "input";
defparam \Binvert~I .output_async_reset = "none";
defparam \Binvert~I .output_power_up = "low";
defparam \Binvert~I .output_register_mode = "none";
defparam \Binvert~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \stage3|MuxA~0 (
// Equation(s):
// \stage3|MuxA~0_combout  = \B~combout  $ (\Binvert~combout )

	.dataa(vcc),
	.datab(vcc),
	.datac(\B~combout ),
	.datad(\Binvert~combout ),
	.cin(gnd),
	.combout(\stage3|MuxA~0_combout ),
	.cout());
// synopsys translate_off
defparam \stage3|MuxA~0 .lut_mask = 16'h0FF0;
defparam \stage3|MuxA~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \stage4|CarryOut~0 (
// Equation(s):
// \stage4|CarryOut~0_combout  = (\CarryIn~combout  & ((\stage3|MuxA~0_combout ) # (\Ainvert~combout  $ (\A~combout )))) # (!\CarryIn~combout  & (\stage3|MuxA~0_combout  & (\Ainvert~combout  $ (\A~combout ))))

	.dataa(\Ainvert~combout ),
	.datab(\A~combout ),
	.datac(\CarryIn~combout ),
	.datad(\stage3|MuxA~0_combout ),
	.cin(gnd),
	.combout(\stage4|CarryOut~0_combout ),
	.cout());
// synopsys translate_off
defparam \stage4|CarryOut~0 .lut_mask = 16'hF660;
defparam \stage4|CarryOut~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Operation[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Operation~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Operation[1]));
// synopsys translate_off
defparam \Operation[1]~I .input_async_reset = "none";
defparam \Operation[1]~I .input_power_up = "low";
defparam \Operation[1]~I .input_register_mode = "none";
defparam \Operation[1]~I .input_sync_reset = "none";
defparam \Operation[1]~I .oe_async_reset = "none";
defparam \Operation[1]~I .oe_power_up = "low";
defparam \Operation[1]~I .oe_register_mode = "none";
defparam \Operation[1]~I .oe_sync_reset = "none";
defparam \Operation[1]~I .operation_mode = "input";
defparam \Operation[1]~I .output_async_reset = "none";
defparam \Operation[1]~I .output_power_up = "low";
defparam \Operation[1]~I .output_register_mode = "none";
defparam \Operation[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Operation[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Operation~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Operation[0]));
// synopsys translate_off
defparam \Operation[0]~I .input_async_reset = "none";
defparam \Operation[0]~I .input_power_up = "low";
defparam \Operation[0]~I .input_register_mode = "none";
defparam \Operation[0]~I .input_sync_reset = "none";
defparam \Operation[0]~I .oe_async_reset = "none";
defparam \Operation[0]~I .oe_power_up = "low";
defparam \Operation[0]~I .oe_register_mode = "none";
defparam \Operation[0]~I .oe_sync_reset = "none";
defparam \Operation[0]~I .operation_mode = "input";
defparam \Operation[0]~I .output_async_reset = "none";
defparam \Operation[0]~I .output_power_up = "low";
defparam \Operation[0]~I .output_register_mode = "none";
defparam \Operation[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \stage8|Mux0~0 (
// Equation(s):
// \stage8|Mux0~0_combout  = \Ainvert~combout  $ (((\CarryIn~combout  & (!\Operation~combout [0] & \Operation~combout [1]))))

	.dataa(\Ainvert~combout ),
	.datab(\CarryIn~combout ),
	.datac(\Operation~combout [0]),
	.datad(\Operation~combout [1]),
	.cin(gnd),
	.combout(\stage8|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \stage8|Mux0~0 .lut_mask = 16'hA6AA;
defparam \stage8|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \stage8|Mux0~1 (
// Equation(s):
// \stage8|Mux0~1_combout  = (\stage3|MuxA~0_combout  & (\A~combout  $ (\Operation~combout [1] $ (\stage8|Mux0~0_combout )))) # (!\stage3|MuxA~0_combout  & (\Operation~combout [1] & (\A~combout  $ (\stage8|Mux0~0_combout ))))

	.dataa(\A~combout ),
	.datab(\stage3|MuxA~0_combout ),
	.datac(\Operation~combout [1]),
	.datad(\stage8|Mux0~0_combout ),
	.cin(gnd),
	.combout(\stage8|Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \stage8|Mux0~1 .lut_mask = 16'h9468;
defparam \stage8|Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \CarryOut~I (
	.datain(\stage4|CarryOut~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(CarryOut));
// synopsys translate_off
defparam \CarryOut~I .input_async_reset = "none";
defparam \CarryOut~I .input_power_up = "low";
defparam \CarryOut~I .input_register_mode = "none";
defparam \CarryOut~I .input_sync_reset = "none";
defparam \CarryOut~I .oe_async_reset = "none";
defparam \CarryOut~I .oe_power_up = "low";
defparam \CarryOut~I .oe_register_mode = "none";
defparam \CarryOut~I .oe_sync_reset = "none";
defparam \CarryOut~I .operation_mode = "output";
defparam \CarryOut~I .output_async_reset = "none";
defparam \CarryOut~I .output_power_up = "low";
defparam \CarryOut~I .output_register_mode = "none";
defparam \CarryOut~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \apotel~I (
	.datain(\stage8|Mux0~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(apotel));
// synopsys translate_off
defparam \apotel~I .input_async_reset = "none";
defparam \apotel~I .input_power_up = "low";
defparam \apotel~I .input_register_mode = "none";
defparam \apotel~I .input_sync_reset = "none";
defparam \apotel~I .oe_async_reset = "none";
defparam \apotel~I .oe_power_up = "low";
defparam \apotel~I .oe_register_mode = "none";
defparam \apotel~I .oe_sync_reset = "none";
defparam \apotel~I .operation_mode = "output";
defparam \apotel~I .output_async_reset = "none";
defparam \apotel~I .output_power_up = "low";
defparam \apotel~I .output_register_mode = "none";
defparam \apotel~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
